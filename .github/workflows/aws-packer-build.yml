name: AWS Packer Build Workflow

on:
  push:
    branches:
      - main

env:
  PRODUCT_VERSION: "1.10.0"  # Packer version to use

jobs:
  integration-tests:
    runs-on: ubuntu-latest
    env:
      DB_NAME: ${{ secrets.DB_NAME }}
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_HOST: ${{ secrets.DB_HOST }}
      DB_PORT: ${{ secrets.DB_PORT }}
      DB_DIALECT: ${{ secrets.DB_DIALECT }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install OS Dependencies
        run: |
          sudo apt-get update -y
          sudo apt-get install -y postgresql postgresql-contrib
          
      - name: Start PostgreSQL Service
        run: sudo service postgresql start

      - name: Create PostgreSQL User & Database
        run: |
          sudo -u postgres psql -c "CREATE ROLE $DB_USER WITH LOGIN CREATEDB PASSWORD '$DB_PASSWORD';"
          sudo -u postgres psql -c "CREATE DATABASE $DB_NAME OWNER $DB_USER;"
        env:
          DB_NAME: ${{ secrets.DB_NAME }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}

      - name: Install Node.js Dependencies
        run: npm install

      - name: Run Integration Tests
        run: npm test

  build-ami:
    needs: integration-tests
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

# Create .env file with required values from GitHub Secrets
      - name: Create .env file
        run: |
          cat <<EOF > .env
          DB_HOST=${{ secrets.DB_HOST }}
          DB_PORT=${{ secrets.DB_PORT }}
          DB_NAME=${{ secrets.DB_NAME }}
          DB_USER=${{ secrets.DB_USER }}
          DB_PASSWORD=${{ secrets.DB_PASSWORD }}
          DB_DIALECT=${{ secrets.DB_DIALECT }}
          EOF
        shell: bash

      - name: List .env file contents
        run: cat .env

      - name: Zip project artifact
        run: |
          zip -r webapp-fork.zip .
        working-directory: .

      - name: List artifact contents
        run: ls -la webapp-fork.zip

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2

      - name: Setup packer
        uses: hashicorp/setup-packer@main
        with:
          version: ${{ env.PRODUCT_VERSION }}

      - name: Run packer init
        working-directory: packer
        run: packer init machine-image.pkr.hcl

      - name: Run packer validate
        working-directory: packer
        run: packer validate machine-image.pkr.hcl

      - name: Build AMI with Packer
        working-directory: packer
        run: |
          packer build --force \
            -var "artifact_path=$(pwd)/../webapp-fork.zip" \
            -var "aws_region=us-east-2" \
            -var "aws_subnet_id=${{ secrets.AWS_SUBNET_ID }}" \
            -var "ssh_username=ubuntu" \
            -var "db_password=${{ secrets.DB_PASSWORD }}" \
            -var "db_name=${{ secrets.DB_NAME }}" \
            machine-image.pkr.hcl
