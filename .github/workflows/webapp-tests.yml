name: Continuous Integration

on:
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    env:
      DB_NAME: test_db
      DB_USER: test_user
      DB_PASSWORD: test_password
      DB_HOST: localhost
      DB_PORT: 5432
      DB_DIALECT: postgres

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install PostgreSQL
        run: |
          sudo apt update
          sudo apt install -y postgresql postgresql-contrib
          sudo systemctl start postgresql
          sudo systemctl enable postgresql
          psql --version

      - name: Configure PostgreSQL
        run: |
          echo "Configuring PostgreSQL with DB_NAME=${DB_NAME} and DB_USER=${DB_USER}..."

          # Ensure variables are set
          if [[ -z "$DB_NAME" || -z "$DB_USER" || -z "$DB_PASSWORD" ]]; then
            echo "ERROR: Missing database variables!"
            exit 1
          fi

          # Drop user-owned objects before dropping user
          sudo -u postgres psql -c "SELECT 'DROP DATABASE $DB_NAME;' WHERE EXISTS (SELECT FROM pg_database WHERE datname = '$DB_NAME');" || true
          sudo -u postgres psql -c "SELECT 'DROP USER $DB_USER;' WHERE EXISTS (SELECT FROM pg_roles WHERE rolname = '$DB_USER');" || true
          
          sudo -u postgres psql -c "CREATE DATABASE $DB_NAME;"
          sudo -u postgres psql -c "CREATE USER $DB_USER WITH PASSWORD '$DB_PASSWORD';"
          sudo -u postgres psql -c "GRANT ALL PRIVILEGES ON DATABASE $DB_NAME TO $DB_USER;"

          echo "✅ PostgreSQL successfully configured!"

      - name: Wait for PostgreSQL to Be Ready
        run: |
          echo "Waiting for PostgreSQL to be ready on $DB_HOST:$DB_PORT..."
          export PGUSER=$DB_USER
          until pg_isready -h "$DB_HOST" -p "$DB_PORT"; do
            echo "⏳ PostgreSQL not ready yet..."
            sleep 2
          done
          echo "✅ PostgreSQL is ready!"

      - name: Install Dependencies
        run: npm install

      - name: Run Tests
        env:
          DATABASE_URL: postgres://$DB_USER:$DB_PASSWORD@$DB_HOST:$DB_PORT/$DB_NAME
          DB_DIALECT: postgres
        run: npm test
