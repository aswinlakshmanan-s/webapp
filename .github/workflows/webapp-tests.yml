name: Webapp CI

on: 
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      POSTGRES_DB: ${{ secrets.DB_NAME }}
      POSTGRES_USER: ${{ secrets.DB_USER }}
      POSTGRES_PASSWORD: ${{ secrets.DB_PASSWORD }}
      POSTGRES_HOST: ${{ secrets.DB_HOST }}
      POSTGRES_PORT: ${{ secrets.DB_PORT }}
      DB_DIALECT: ${{ secrets.DB_DIALECT }}

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Install Dependencies
      run: |
        sudo apt update && sudo apt install -y postgresql postgresql-contrib
        npm install

    - name: Echo DB_DIALECT for verification
      run: echo "DB_DIALECT is ${{secrets.DB_DIALECT}}

    - name: Debug Environment Variables
      run: |
        echo "DEBUG: Checking if POSTGRES_PASSWORD is set"
        if [[ -z "${POSTGRES_PASSWORD}" ]]; then
          echo "‚ùå ERROR: POSTGRES_PASSWORD is empty!"
          exit 1
        else
          echo "‚úÖ POSTGRES_PASSWORD is set"
        fi

    - name: Configure PostgreSQL
      run: |
        sudo systemctl start postgresql
        sudo -u postgres psql -c "ALTER USER ${{ secrets.DB_USER }} WITH PASSWORD '${{ secrets.DB_PASSWORD }}';"
        
        # ‚úÖ Only create the database if it doesn't exist
        if ! sudo -u postgres psql -tAc "SELECT 1 FROM pg_database WHERE datname='${{ secrets.DB_NAME }}'" | grep -q 1; then
          sudo -u postgres psql -c "CREATE DATABASE ${{ secrets.DB_NAME }};"
        else
          echo "‚úÖ Database ${{ secrets.DB_NAME }} already exists, skipping creation."
        fi

    - name: Wait for PostgreSQL
      run: until pg_isready -h ${{ secrets.DB_HOST }} -U ${{ secrets.DB_USER }} -p ${{ secrets.DB_PORT }}; do sleep 2; done

    - name: Run Tests
      run: npm test

    - name: Post Job Cleanup
      if: always()
      run: |
        echo "üßπ Cleaning up orphan processes..."
        pkill -P $$ || true  # Kill all child processes
        sudo systemctl stop postgresql  # Stop PostgreSQL after the job
        echo "Cleanup complete!"


